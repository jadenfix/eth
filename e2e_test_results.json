{
  "start_time": 1753478083.185314,
  "end_time": 1753478112.4925928,
  "total_duration": 29.307278871536255,
  "tiers": {
    "tier0": {
      "status": "completed",
      "duration": 29.307075262069702,
      "return_code": 1,
      "stdout": "============================= test session starts ==============================\nplatform darwin -- Python 3.11.3, pytest-7.4.3, pluggy-1.6.0\nFugue tests will be initialized with options:\nrootdir: /Users/jadenfix/eth\nconfigfile: pyproject.toml\nplugins: asyncio-0.21.1, respx-0.22.0, cov-5.0.0, sugar-1.0.0, html-4.1.1, env-1.1.5, timeout-2.4.0, metadata-3.1.1, jaxtyping-0.3.2, clarity-1.0.1, fugue-0.9.1, mock-3.12.0, anyio-3.7.1, docker-2.0.1, typeguard-4.4.4, xdist-3.6.1\nasyncio: mode=Mode.STRICT\ntimeout: 30.0s\ntimeout method: signal\ntimeout func_only: False\ncollected 26 items\n\ntests/e2e/tier0/test_t0_a_basic_ingestion.py \u2705 T0-A: Basic ingestion test passed\n.\u2705 T0-A: Multiple transaction ingestion test passed\n.\u2705 T0-A: Pub/Sub pipeline simulation test passed\n.\ntests/e2e/tier0/test_t0_b_basic_queries.py \u2705 T0-B: Basic BigQuery query test passed\n.\u2705 T0-B: Aggregated query test passed\n.\u2705 T0-B: Complex filter query test passed\n.\ntests/e2e/tier0/test_t0_c_graph_queries.py \u2705 T0-C: Basic graph query test passed\n.FFF\ntests/e2e/tier0/test_t0_d_ui_rendering.py \u2705 T0-D: Dashboard loads without crash\n.\u2705 T0-D: Graph visualization endpoint accessible\n.\u2705 T0-D: Health check endpoint working\n.F\u2705 T0-D: Static assets accessible (4/4 found)\n.\u26a0\ufe0f  T0-D: WebSocket not available (optional for T0)\n.\u2705 T0-D: UI config next.config.js is valid\n\u2705 T0-D: UI config package.json is valid\n\u2705 T0-D: UI config layout.json is valid\n\u2705 T0-D: UI configuration validation complete\n.\ntests/e2e/tier0/test_t0_simple_infrastructure.py \u2705 Python environment validation passed\n.\u2705 Pytest markers validation passed\n.\u2705 Test fixtures validation passed\n.\u2705 Time operations validation passed (duration: 0.0000s)\n.\u2705 Data structures validation passed\n.\u2705 Error handling validation passed\n.\u2705 List operations validation passed\n.\u2705 Configuration loading validation passed\n.\u2705 Async compatibility validation passed\n.\n\n=================================== FAILURES ===================================\n_________________ TestNeo4jGraphQueries.test_graph_path_query __________________\nneo4j.exceptions.GqlError: {gql_status: 42I06} {gql_status_description: error: syntax error or access rule violation - invalid input. Invalid input ':', expected: a parameter, 'WHERE', ']' or '{'.} {message: 42I06: Invalid input ':', expected: a parameter, 'WHERE', ']' or '{'.} {diagnostic_record: {'_classification': 'CLIENT_ERROR', '_position': {'column': 29, 'line': 3, 'offset': 118}, 'OPERATION': '', 'OPERATION_CODE': '0', 'CURRENT_SCHEMA': '/'}} {raw_classification: CLIENT_ERROR}\n\nThe above exception was the direct cause of the following exception:\ntests/e2e/tier0/test_t0_c_graph_queries.py:151: in test_graph_path_query\n    results = neo4j_utils.query_graph(query)\ntests/e2e/helpers/neo4j.py:181: in query_graph\n    result = session.run(query)\n../.pyenv/versions/3.11.3/lib/python3.11/site-packages/neo4j/_sync/work/session.py:328: in run\n    self._auto_result._run(\n../.pyenv/versions/3.11.3/lib/python3.11/site-packages/neo4j/_sync/work/result.py:236: in _run\n    self._attach()\n../.pyenv/versions/3.11.3/lib/python3.11/site-packages/neo4j/_sync/work/result.py:430: in _attach\n    self._connection.fetch_message()\n../.pyenv/versions/3.11.3/lib/python3.11/site-packages/neo4j/_sync/io/_common.py:184: in inner\n    func(*args, **kwargs)\n../.pyenv/versions/3.11.3/lib/python3.11/site-packages/neo4j/_sync/io/_bolt.py:864: in fetch_message\n    res = self._process_message(tag, fields)\n../.pyenv/versions/3.11.3/lib/python3.11/site-packages/neo4j/_sync/io/_bolt5.py:1208: in _process_message\n    response.on_failure(summary_metadata or {})\n../.pyenv/versions/3.11.3/lib/python3.11/site-packages/neo4j/_sync/io/_common.py:254: in on_failure\n    raise self._hydrate_error(metadata)\nE   neo4j.exceptions.CypherSyntaxError: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input ':': expected a parameter, 'WHERE', ']' or '{' (line 3, column 29 (offset: 118))\nE   \"                     -[*1..3:TestRelationship]->\"\nE                                ^}\n______________ TestNeo4jGraphQueries.test_graph_aggregation_query ______________\ntests/e2e/tier0/test_t0_c_graph_queries.py:212: in test_graph_aggregation_query\n    assert result[\"total_transactions\"] == 15  # 1+2+3+4+5\nE   assert 450 == 15\n________________ TestNeo4jGraphQueries.test_graph_export_format ________________\ntests/e2e/tier0/test_t0_c_graph_queries.py:244: in test_graph_export_format\n    assert \"edges\" in export_data, \"Export should have 'edges' field\"\nE   AssertionError: Export should have 'edges' field\nE   assert 'edges' in {'metadata': {'export_timestamp': '2024-01-01T00:00:00Z', 'node_count': 2, 'relationship_count': 30}, 'nodes': [{'id':...o': '0xEXPORT2', 'type': 'INTERACTED_WITH'}, {'from': '0xEXPORT1', 'to': '0xEXPORT2', 'type': 'INTERACTED_WITH'}, ...]}\n___________________ TestUIRendering.test_api_error_handling ____________________\ntests/e2e/tier0/test_t0_d_ui_rendering.py:138: in test_api_error_handling\n    assert response.status_code in [400, 404, 405, 500], f\"Should return proper error code for {endpoint}\"\nE   AssertionError: Should return proper error code for /api/dashboard/badparam\nE   assert 200 in [400, 404, 405, 500]\nE    +  where 200 = <tests.e2e.conftest.async_http_client.<locals>.MockAsyncClient.get.<locals>.MockResponse object at 0x12a01c050>.status_code\n=============================== warnings summary ===============================\ntests/e2e/tier0/test_t0_c_graph_queries.py::TestNeo4jGraphQueries::test_simple_graph_query\ntests/e2e/tier0/test_t0_d_ui_rendering.py::TestUIRendering::test_websocket_connection\ntests/e2e/tier0/test_t0_d_ui_rendering.py::TestUIRendering::test_websocket_connection\n  /Users/jadenfix/.pyenv/versions/3.11.3/lib/python3.11/site-packages/neo4j/_sync/driver.py:547: DeprecationWarning: Relying on Driver's destructor to close the session is deprecated. Please make sure to close the session. Use it as a context (`with` statement) or make sure to call `.close()` explicitly. Future versions of the driver will not close drivers automatically.\n    _deprecation_warn(\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n-------- generated xml file: /Users/jadenfix/eth/test_results_tier0.xml --------\n=========================== short test summary info ============================\nFAILED tests/e2e/tier0/test_t0_c_graph_queries.py::TestNeo4jGraphQueries::test_graph_path_query\nFAILED tests/e2e/tier0/test_t0_c_graph_queries.py::TestNeo4jGraphQueries::test_graph_aggregation_query\nFAILED tests/e2e/tier0/test_t0_c_graph_queries.py::TestNeo4jGraphQueries::test_graph_export_format\nFAILED tests/e2e/tier0/test_t0_d_ui_rendering.py::TestUIRendering::test_api_error_handling\n================== 4 failed, 22 passed, 3 warnings in 23.90s ===================\n",
      "stderr": "",
      "tests": {
        "passed": 0,
        "failed": 0,
        "skipped": 0,
        "total": 0
      },
      "success": false
    }
  },
  "summary": {
    "total_tests": 0,
    "passed": 0,
    "failed": 0,
    "skipped": 0,
    "error_tests": [
      "tier0"
    ]
  }
}